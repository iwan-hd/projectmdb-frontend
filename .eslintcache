[{"D:\\web_project\\front_end\\src\\index.js":"1","D:\\web_project\\front_end\\src\\reportWebVitals.js":"2","D:\\web_project\\front_end\\src\\App.js":"3","D:\\web_project\\front_end\\src\\config\\theme\\theme.js":"4","D:\\web_project\\front_end\\src\\pages\\login\\index.js":"5","D:\\web_project\\front_end\\src\\pages\\404\\index.js":"6","D:\\web_project\\front_end\\src\\pages\\private\\index.js":"7","D:\\web_project\\front_end\\src\\pages\\private\\style.js":"8","D:\\web_project\\front_end\\src\\pages\\private\\partnumber\\index.js":"9","D:\\web_project\\front_end\\src\\pages\\private\\users\\index.js":"10","D:\\web_project\\front_end\\src\\pages\\private\\gr\\index.js":"11","D:\\web_project\\front_end\\src\\pages\\login\\style.js":"12","D:\\web_project\\front_end\\src\\pages\\private\\lupa-password\\index.js":"13","D:\\web_project\\front_end\\src\\pages\\404\\style.js":"14","D:\\web_project\\front_end\\src\\pages\\private\\partnumber\\style.js":"15","D:\\web_project\\front_end\\src\\pages\\private\\users\\style.js":"16","D:\\web_project\\front_end\\src\\pages\\private\\gr\\style.js":"17","D:\\web_project\\front_end\\src\\config\\api\\partnumber.js":"18","D:\\web_project\\front_end\\src\\config\\api\\http-comment.js":"19","D:\\web_project\\front_end\\src\\config\\api\\users.js":"20","D:\\web_project\\front_end\\src\\config\\api\\gr.js":"21","D:\\web_project\\front_end\\src\\config\\api\\auth.js":"22","D:\\web_project\\front_end\\src\\components\\PrivateRoad.js":"23","D:\\web_project\\front_end\\src\\config\\api\\auth-header.js":"24","D:\\web_project\\front_end\\src\\pages\\private\\partnumber\\view.js":"25","D:\\web_project\\front_end\\src\\pages\\private\\partnumber\\list.js":"26","D:\\web_project\\front_end\\src\\pages\\private\\gr\\view.js":"27","D:\\web_project\\front_end\\src\\pages\\private\\gr\\list.js":"28","D:\\web_project\\front_end\\src\\pages\\private\\users\\view.js":"29","D:\\web_project\\front_end\\src\\pages\\private\\users\\list.js":"30","D:\\web_project\\front_end\\src\\pages\\private\\partnumber\\add.js":"31","D:\\web_project\\front_end\\src\\pages\\private\\partnumber\\edit.js":"32","D:\\web_project\\front_end\\src\\pages\\private\\gr\\add.js":"33","D:\\web_project\\front_end\\src\\pages\\private\\gr\\edit.js":"34","D:\\web_project\\front_end\\src\\pages\\private\\users\\add.js":"35","D:\\web_project\\front_end\\src\\pages\\private\\users\\edit.js":"36"},{"size":598,"mtime":1611544267730,"results":"37","hashOfConfig":"38"},{"size":362,"mtime":499162500000,"results":"39","hashOfConfig":"38"},{"size":1124,"mtime":1617628312571,"results":"40","hashOfConfig":"38"},{"size":223,"mtime":1611630078424,"results":"41","hashOfConfig":"38"},{"size":5630,"mtime":1623763261988,"results":"42","hashOfConfig":"38"},{"size":817,"mtime":1612751964875,"results":"43","hashOfConfig":"38"},{"size":8082,"mtime":1623244363023,"results":"44","hashOfConfig":"38"},{"size":2080,"mtime":1611630663110,"results":"45","hashOfConfig":"38"},{"size":1272,"mtime":1624105213190,"results":"46","hashOfConfig":"38"},{"size":1212,"mtime":1624719394202,"results":"47","hashOfConfig":"38"},{"size":1115,"mtime":1624017990455,"results":"48","hashOfConfig":"38"},{"size":915,"mtime":1617624988958,"results":"49","hashOfConfig":"38"},{"size":162,"mtime":1611542605691,"results":"50","hashOfConfig":"38"},{"size":311,"mtime":1612752159752,"results":"51","hashOfConfig":"38"},{"size":393,"mtime":1623246004654,"results":"52","hashOfConfig":"38"},{"size":728,"mtime":1624111940944,"results":"53","hashOfConfig":"38"},{"size":243,"mtime":1616473149504,"results":"54","hashOfConfig":"38"},{"size":698,"mtime":1623681553228,"results":"55","hashOfConfig":"38"},{"size":222,"mtime":1623251642563,"results":"56","hashOfConfig":"38"},{"size":579,"mtime":1624540761046,"results":"57","hashOfConfig":"38"},{"size":596,"mtime":1624020833191,"results":"58","hashOfConfig":"38"},{"size":1151,"mtime":1617509251198,"results":"59","hashOfConfig":"38"},{"size":623,"mtime":1617505634532,"results":"60","hashOfConfig":"38"},{"size":270,"mtime":1623679802539,"results":"61","hashOfConfig":"38"},{"size":2211,"mtime":1623676643947,"results":"62","hashOfConfig":"38"},{"size":6195,"mtime":1624105882736,"results":"63","hashOfConfig":"38"},{"size":8325,"mtime":1626015691242,"results":"64","hashOfConfig":"38"},{"size":7057,"mtime":1626013661893,"results":"65","hashOfConfig":"38"},{"size":3900,"mtime":1624546747366,"results":"66","hashOfConfig":"38"},{"size":6955,"mtime":1624718658613,"results":"67","hashOfConfig":"38"},{"size":4288,"mtime":1623852858222,"results":"68","hashOfConfig":"38"},{"size":5301,"mtime":1624020798068,"results":"69","hashOfConfig":"38"},{"size":7289,"mtime":1624110544682,"results":"70","hashOfConfig":"38"},{"size":7780,"mtime":1624718412306,"results":"71","hashOfConfig":"38"},{"size":11125,"mtime":1624542369648,"results":"72","hashOfConfig":"38"},{"size":9501,"mtime":1624719711092,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"77"},"1pyke5t",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"77"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"77"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"77"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"77"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"77"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"77"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"77"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"77"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"77"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"142","messages":"143","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"77"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"77"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"77"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"77"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"77"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"77"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"77"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"77"},"D:\\web_project\\front_end\\src\\index.js",["166"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n       <App />\n    </Router> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["167","168"],"D:\\web_project\\front_end\\src\\reportWebVitals.js",[],"D:\\web_project\\front_end\\src\\App.js",["169"],"import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\n//import komponen\nimport NotFound from './pages/404';\nimport Login from './pages/login';\nimport LupaPassword from './pages/private/lupa-password';\nimport Private from './pages/private';\nimport PrivateRoad from \"./components/PrivateRoad\";\n\n// import material-ui\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core';\nimport theme from './config/theme/theme';\n\nfunction App() {\n  return (\n   \n    <div>\n      <CssBaseline/>\n        <ThemeProvider theme={theme}>\n        <Switch>\n          <PrivateRoad path=\"/\" component={Private} exact />\n          <PrivateRoad path=\"/users\" component={Private} />\n          <PrivateRoad path=\"/partnumbers\" component={Private} />\n     \n          <PrivateRoad path=\"/grlist\" component={Private} /> \n          <PrivateRoad path=\"/lupa-pasword\" component={Private} />\n          \n          <Route path=\"/login\" component={Login} />\n          <Route component={NotFound} />\n        </Switch>  \n        </ThemeProvider>\n    </div>\n  \n   \n  );\n}\n\nexport default App;\n","D:\\web_project\\front_end\\src\\config\\theme\\theme.js",[],"D:\\web_project\\front_end\\src\\pages\\login\\index.js",["170","171","172","173"],"import React , {useState} from 'react';\r\nimport useStyles from './style.js';\r\n\r\n//material ui \r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typograpy from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport AuthService from '../../config/api/auth';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\nexport default function Login(props) {\r\n  \r\n\r\n    const classes = useStyles();\r\n    const {location}= props;\r\n\r\n    const [form, setForm] = useState({\r\n        username : '',\r\n        password : ''\r\n    });\r\n\r\n    const [error, setError] = useState({\r\n        username : '',\r\n        password : ''\r\n    });    \r\n\r\n\r\n    const [submitting, setSubmitting] = useState(false);\r\n\r\n    const [message,setMessage] = useState(\"\");\r\n\r\n\r\n    const validate = () => {\r\n        const newError = {...error};\r\n    \r\n    //console.log(form.username.length);\r\n        if (!form.username){\r\n            newError.username = \"Username harus di isi !\";\r\n                 } else if(form.username.length < 3) {\r\n            newError.username = \"UserName minimal 3 Character\";\r\n         }\r\n \r\n        if (!form.password){\r\n        newError.password = \"Password harus di isi !\";\r\n        } \r\n        else if(form.password.length < 6) {\r\n        newError.password = \"Password minimal 6 Character\";\r\n        }\r\n\r\n    return newError;\r\n  };\r\n    \r\n    const handleChange = e => {\r\n    \r\n        setForm({\r\n            ...form,\r\n            [e.target.name] : e.target.value\r\n        });\r\n\r\n        setError({\r\n            ...error,\r\n            [e.target.name] : ''\r\n\r\n        })\r\n    }\r\n\r\n    const handleSubmit =  e=>{\r\n        e.preventDefault();\r\n        const findErrors = validate();\r\n\r\n        if (Object.values(findErrors).some( err => err != '')) {\r\n            setError(findErrors);\r\n        } else {\r\n            \r\n            // try {\r\n                \r\n                setSubmitting(true); // kolom inputan di frezze waktu button di klik\r\n                AuthService.login(form.username,form.password)\r\n                .then(() => {\r\n                    props.history.push('/');\r\n                    window.location.reload();  // supaya prg awal bisa ambil data yg di localstorage spt password dan user yg login\r\n\r\n                },\r\n                (error) => {\r\n\r\n                    alert('Username or Password Not Match',error.response);\r\n                   // dispatch(userUpdateProfileFail());\r\n                    console.log(error);\r\n                    const newError = (error.response &&\r\n                        error.response.data &&\r\n                        error.response.data.message) ||\r\n                      error.message || \r\n                      error.toString();\r\n                    \r\n                   //   setMessage(newError);\r\n                      setError(newError);\r\n                      setSubmitting(false); // kolom inputan bisa berfungsi lagi...tidak frezze\r\n                }\r\n                );\r\n                \r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return <Container component=\"main\" maxWidth=\"xs\">\r\n        <Paper className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n    \r\n            <Typograpy\r\n            component=\"h1\"\r\n            variant=\"h5\"\r\n            className={classes.title, classes.blue}\r\n            >\r\n            \r\n                Halaman Login\r\n            </Typograpy>\r\n        \r\n            {message && (\r\n            <Typography>\r\n                {message}\r\n            </Typography>\r\n            \r\n          )}\r\n            <form className={classes.form} onSubmit={handleSubmit} noValidate>\r\n\r\n                <TextField\r\n                    id=\"username\"\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    margin=\"normal\"\r\n                    label=\"Username\"\r\n                    fullWidth\r\n                    required\r\n                    value={form.username}\r\n                    onChange={handleChange}\r\n                    helperText={error.username}\r\n                    error={error.username?true:false}\r\n                    disabled={submitting}\r\n                    variant=\"outlined\"\r\n                    \r\n                />\r\n\r\n                <TextField\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    margin=\"normal\"\r\n                    label=\"Password\"\r\n                    fullWidth\r\n                    required\r\n                    value={form.password}\r\n                    onChange={handleChange}\r\n                    helperText={error.password}\r\n                    error={error.password?true:false}\r\n                    disabled={submitting}\r\n                    variant=\"outlined\"\r\n                    \r\n                />\r\n\r\n                \r\n                <Button\r\n                        type=\"submit\"\r\n                        color=\"primary\"\r\n                        variant =\"contained\"\r\n                        size=\"large\"\r\n                        disabled={submitting}\r\n                        className={classes.submit}\r\n                        fullWidth\r\n                    >\r\n                        Login\r\n                </Button>\r\n               \r\n                  \r\n            </form>\r\n             \r\n        </Paper>\r\n           \r\n        </Container>\r\n    \r\n}\r\n\r\n","D:\\web_project\\front_end\\src\\pages\\404\\index.js",[],"D:\\web_project\\front_end\\src\\pages\\private\\index.js",["174","175","176","177","178","179"],"import React from 'react';\r\nimport clsx from 'clsx';\r\n\r\n//import untuk material ui\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport PartNumberIcon from '@material-ui/icons/WorkOutlineOutlined'\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport UserIcon from '@material-ui/icons/Face';\r\nimport GRListIcon from '@material-ui/icons/Layers';\r\nimport ExitIcon from '@material-ui/icons/ExitToApp';\r\nimport AuthService from '../../config/api/auth.js';\r\n\r\n//import styles\r\nimport useStyles  from \"./style.js\";\r\n\r\n//import react router dom\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\n//import komponent\r\nimport Users from './users/index.js';\r\nimport PartNumber from './partnumber/index.js';\r\nimport GRList from './gr/index.js';\r\n\r\nexport default function Private(props) {\r\n  \r\n    // basic dashboard\r\n  const classes = useStyles();\r\n  const {location}= props;\r\n  const [open, setOpen] = React.useState(true);\r\n  const [adminBoard, setAdminBoard] = React.useState(false);\r\n  const [userBoard, setUserBoard]= React.useState(false);\r\n  const [pnBoard, setPnBoard]= React.useState(false);\r\n  const [grBoard, setGrBoard]= React.useState(false);\r\n  const [user,setUser] = React.useState('')\r\n \r\n\r\n  React.useEffect(() => { \r\n    const userLogin = AuthService.getCurrentUser();\r\n   \r\n    setUser(userLogin)\r\n    console.log(user);\r\n   if (userLogin) {\r\n     setAdminBoard(userLogin.roles.includes(\"ROLE_ADMIN\"));\r\n     setUserBoard(userLogin.roles.includes(\"ROLE_USER\"));\r\n     setPnBoard(userLogin.roles.includes(\"ROLE_USER_PN\"));\r\n     setGrBoard(userLogin.roles.includes(\"ROLE_USER_GR\"));\r\n   }\r\n  }, []);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  const logout = () => {\r\n    AuthService.logout();\r\n    props.history.push('/login');\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            <Switch>\r\n               {/* Buat Title */}\r\n                <Route path=\"/users\" children=\"Title Users\" />\r\n                <Route path=\"/partnumbers\" children=\"Title Part Number\" />\r\n                <Route path=\"/grlist\" children=\"Title GR\" />\r\n                <Route children=\"Home\"/>\r\n            </Switch>\r\n          </Typography>\r\n        \r\n          <IconButton color=\"inherit\" onClick={logout}>\r\n          <Typography component=\"h6\"  color=\"inherit\" >\r\n\r\n          Hallo,  {user.nama} ( {user.roles} )\r\n          </Typography>\r\n          <div>&nbsp;</div>\r\n              <ExitIcon />\r\n         \r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        {/* <Divider /> */}\r\n\r\n        {/* Menu */}\r\n        <List>\r\n            {/* match dan history bagian dari route utk menandakan isi path */}\r\n            <Route path=\"/\" exact children={({match, history}) => {\r\n                    return <ListItem\r\n                    //Button start\r\n                    button\r\n                    selected = {match ? true : false}\r\n                    // buat efek di tombol aktif\r\n\r\n                    onClick={() => {\r\n                        history.push('/')\r\n                    // di click link ke \"/\" \r\n                    \r\n                    //Button end\r\n                    }}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <HomeIcon/> \r\n                            {/* ini mau gambar rumah */}\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Home\"/>\r\n                        {/* huruf Home di list item, sesudah gambar rumah */}\r\n                            \r\n                    </ListItem>\r\n            }}\r\n            \r\n            />\r\n\r\n          {adminBoard && (\r\n             <Route path=\"/users\" children={({match, history}) => {\r\n               return <ListItem\r\n               button\r\n               selected = {match ? true : false}\r\n               onClick={() => {\r\n               history.push('/users')\r\n               }}\r\n              >\r\n                  <ListItemIcon>\r\n                    <UserIcon/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"Users\"/>\r\n                  </ListItem>\r\n              }}  \r\n             />\r\n          )}\r\n           \r\n          { (pnBoard || adminBoard || userBoard) ? (\r\n            <Route path=\"/partnumbers\" children={({match, history}) => {\r\n                    return <ListItem\r\n                    button\r\n                    selected = {match ? true : false}\r\n                    onClick={() => {\r\n                        history.push('/partnumbers')\r\n                    }}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <PartNumberIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"Part Number\"/>\r\n                    </ListItem>\r\n            }}\r\n            />\r\n          ) :\"\"}\r\n\r\n          {(grBoard || adminBoard || userBoard)  ? (\r\n            <Route path=\"/grlist\" children={({match, history}) => {\r\n                    return <ListItem\r\n                    button\r\n                    selected = {match ? true : false}\r\n                    onClick={() => {\r\n                        history.push('/grlist')\r\n                    }}\r\n                    >\r\n                        <ListItemIcon>\r\n                            <GRListIcon/>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary=\"GR List\"/>\r\n                    </ListItem>\r\n            }}\r\n            />\r\n          ) :\"\"}\r\n\r\n\r\n      </List>\r\n      \r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n       {/* Container = isi dari komponen yg di private (isi list menu) */}\r\n\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n\r\n            <Switch>\r\n                <Route path=\"/users\" component={Users} />\r\n                <Route path=\"/partnumbers\" component={PartNumber} />\r\n               \r\n              \r\n                <Route path=\"/grlist\" component={GRList} />\r\n            </Switch>\r\n\r\n        \r\n       \r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n\r\n// export default function Private() {\r\n//     return (\r\n//         <div>\r\n//             <h1>Dashboard</h1>\r\n//         </div>\r\n//     )\r\n// }\r\n","D:\\web_project\\front_end\\src\\pages\\private\\style.js",[],"D:\\web_project\\front_end\\src\\pages\\private\\partnumber\\index.js",[],"D:\\web_project\\front_end\\src\\pages\\private\\users\\index.js",[],"D:\\web_project\\front_end\\src\\pages\\private\\gr\\index.js",[],"D:\\web_project\\front_end\\src\\pages\\login\\style.js",[],"D:\\web_project\\front_end\\src\\pages\\private\\lupa-password\\index.js",[],"D:\\web_project\\front_end\\src\\pages\\404\\style.js",["180"],"import { makeStyles } from \"@material-ui/styles\";\r\nimport theme from \"../../config/theme/theme\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    paperCss : {\r\n        marginTop  :theme.spacing(8),\r\n        padding  :theme.spacing(6),\r\n        textAlign :\"center\"\r\n    }\r\n\r\n}));\r\n\r\n\r\nexport default useStyles;","D:\\web_project\\front_end\\src\\pages\\private\\partnumber\\style.js",["181"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport theme from \"../../../config/theme/theme\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    table: {\r\n      minWidth: 650,\r\n      padding  : theme.spacing(1),\r\n      marginTop : theme.spacing(2)\r\n    },\r\n    form: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\n","D:\\web_project\\front_end\\src\\pages\\private\\users\\style.js",["182","183"],"import { makeStyles , useTheme} from '@material-ui/core/styles';\r\nimport theme from \"../../../config/theme/theme\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    table: {\r\n      minWidth: 650,\r\n      padding  : theme.spacing(1),\r\n      marginTop : theme.spacing(2)\r\n    },\r\n    form: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        minWidth: 320,\r\n        maxWidth: 500,\r\n      },\r\n      formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n      },\r\n      chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n      },\r\n      chip: {\r\n        margin: 2,\r\n      },\r\n      noLabel: {\r\n        marginTop: theme.spacing(3),\r\n      },\r\n    },\r\n  }));\r\n","D:\\web_project\\front_end\\src\\pages\\private\\gr\\style.js",["184"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport theme from \"../../../config/theme/theme\";\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    table: {\r\n      minWidth: 650,\r\n      padding  : theme.spacing(1),\r\n    },\r\n  }));","D:\\web_project\\front_end\\src\\config\\api\\partnumber.js",[],"D:\\web_project\\front_end\\src\\config\\api\\http-comment.js",[],"D:\\web_project\\front_end\\src\\config\\api\\users.js",[],"D:\\web_project\\front_end\\src\\config\\api\\gr.js",[],"D:\\web_project\\front_end\\src\\config\\api\\auth.js",[],"D:\\web_project\\front_end\\src\\components\\PrivateRoad.js",["185"],"import React from 'react';\r\nimport { Route,Switch,Redirect } from 'react-router-dom'\r\nimport AuthService from '../config/api/auth.js';\r\n\r\nexport default function PrivateRoad({component:Component,...restProps}) {\r\n\r\n    const user = AuthService.getCurrentUser();\r\n    return (\r\n       <Route\r\n       {...restProps}\r\n\r\n       render={props => {\r\n           return user ? \r\n           <Component {...props} />\r\n           :\r\n           <Redirect to={{\r\n               pathname : \"/login\",\r\n               state : {\r\n                   from : props.location\r\n               }\r\n           }} />\r\n       }}\r\n       />\r\n    )\r\n}\r\n","D:\\web_project\\front_end\\src\\config\\api\\auth-header.js",[],"D:\\web_project\\front_end\\src\\pages\\private\\partnumber\\view.js",["186","187","188","189"],"import React, {useState, useEffect} from 'react'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PartNumberService from '../../../config/api/partnumber.js';\r\nexport default function ViewPN({match}) {\r\n    \r\n    console.log(match.params.id);\r\n    const [partnumbers, setPartnumbers] = useState({});\r\n    const ID = match.params.id;\r\n\r\n    useEffect(() => {\r\n        PartNumberService.getId(ID).then(res=>{\r\n            // ambil dari postman\r\n            const {datatabel, message, status} = res.data;\r\n            if (message == 'success') {\r\n                setPartnumbers(datatabel.body)\r\n            } else {\r\n                alert(message);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            alert(error);\r\n        })\r\n      \r\n    \r\n    }, [])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n       \r\n\r\n        <Grid container alignItems=\"center\" justify=\"center\">\r\n            {/* <Grid item xs={12} sm={6}>\r\n                    \r\n            </Grid> */}\r\n         <TableContainer component={Paper}>\r\n             <Table>\r\n                <TableRow>\r\n                        <TableCell>No PN</TableCell>\r\n                        <TableCell>:</TableCell>\r\n                        <TableCell>{partnumbers.partCode}</TableCell>              \r\n                </TableRow>\r\n                <TableRow>\r\n                        <TableCell>Part Name</TableCell>\r\n                        <TableCell>:</TableCell>\r\n                        <TableCell>{partnumbers.partName}</TableCell>              \r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                        <TableCell>Stock</TableCell>\r\n                        <TableCell>:</TableCell>\r\n                        <TableCell>{partnumbers.stock}</TableCell>              \r\n                </TableRow>\r\n             </Table>\r\n               \r\n         </TableContainer>\r\n        </Grid>\r\n        </div>\r\n    )\r\n}\r\n","D:\\web_project\\front_end\\src\\pages\\private\\partnumber\\list.js",["190","191","192","193","194","195","196"],"import React, {useState, useEffect} from 'react'\r\nimport PartNumberService from '../../../config/api/partnumber.js'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Route, Switch, NavLink, Link } from 'react-router-dom'\r\n\r\n//import material-ui\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {useStyles} from './style.js'\r\nimport { Tab } from '@material-ui/core';\r\n\r\nexport default function ListPN() {\r\n// membuat state pn dalam fungsi setpartnumbers, dalam array \r\nconst [partnumbers, setpartnumbers] = useState([]);\r\n\r\nconst classes = useStyles();\r\n// buat ngelink ke halaman yg di mau\r\nconst history = useHistory();\r\n\r\n//Switch alert=> dialog\r\nconst MySwal = withReactContent(Swal)\r\n\r\n\r\nuseEffect(() => {\r\n    PartNumberService.getAll().then(res=>{\r\n        console.log(res);\r\n        // ambil dari postman\r\n        const {datatabel, message, status} = res.data;\r\n        if (message == 'success') {\r\n            setpartnumbers(datatabel.body)\r\n        } else {\r\n            alert(message);\r\n        }\r\n    })\r\n    .catch(error => {\r\n        alert(error);\r\n    })\r\n  \r\n\r\n}, [])\r\n\r\nconst handleDelete = idx => {\r\n \r\n    MySwal.fire({\r\n        title: 'Are you sure remove this data?',\r\n        text: \"You won't be able to repeat this!\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        confirmButtonColor: '#3085d6',\r\n        cancelButtonColor: '#d33',\r\n        confirmButtonText: 'Yes, delete it!'\r\n      }).then((result) => {\r\n        if (result.isConfirmed) {\r\n        PartNumberService.deletePartNumber(idx)\r\n            .then(response => {\r\n                    console.log(response)\r\n                    MySwal.fire(\r\n                        {\r\n                            title :  `${response.data.datatabel}`,\r\n                            icon : 'success',\r\n                            showConfirmButton: false,\r\n\r\n                        }\r\n                        \r\n                      )\r\n                      window.location.reload()\r\n                   \r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n            // location.reload();\r\n            \r\n        }\r\n      })\r\n\r\n  \r\n    \r\n};\r\n\r\nreturn (\r\n    <>\r\n        \r\n         <Button variant=\"contained\" color=\"secondary\" onClick={() => { window.location.href='/partnumbers/add' }}>\r\n          Add PN\r\n        </Button>\r\n        \r\n        <TableContainer component={Paper}>\r\n            <Table className={classes.table} size=\"small\">\r\n                <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>No</TableCell>\r\n                        <TableCell>ID</TableCell>\r\n                        <TableCell>Part Code</TableCell>\r\n                        <TableCell>Part Name</TableCell>\r\n                        <TableCell>Stock</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n\r\n                <TableBody>\r\n                        {partnumbers && partnumbers.map((PartNumber, index) => {\r\n                            //map seperti for looping\r\n                            //partnumbers suatu array, ada isinya, sedangkan Partnumber = var 1 object\r\n                            //index mulai dari 0,1,2,3...\r\n                        return <TableRow hover key={index}>\r\n                                 <TableCell>{index + 1}</TableCell>\r\n                                 <TableCell>{PartNumber.id}</TableCell>\r\n                                 \r\n                                 <TableCell>{PartNumber.partCode}</TableCell>\r\n                                 <TableCell>{PartNumber.partName}</TableCell>\r\n                                 <TableCell>{PartNumber.stock}</TableCell>\r\n                                 <TableCell>\r\n                                    <Tooltip title=\"View\">\r\n                                        <IconButton aria-label=\"View\" size=\"small\"\r\n                                        component = {Link} to={`/partnumbers/view/${PartNumber.id}`}\r\n                                        >\r\n\r\n                                            <VisibilityIcon  fontSize=\"small\"/>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n\r\n                                    <Tooltip title=\"Edit\">\r\n                                        <IconButton aria-label=\"Edit\" size=\"small\"\r\n                                        component = {Link} to={`/partnumbers/edit/${PartNumber.id}`}\r\n                                        >\r\n\r\n                                            <EditIcon fontSize=\"small\"/>\r\n                                        </IconButton>\r\n                                        \r\n                                    </Tooltip>\r\n                                    <Tooltip title=\"Delete\">\r\n                                        <IconButton onClick={() => handleDelete(PartNumber.id)}size=\"small\">\r\n                                     \r\n                                            <DeleteIcon fontSize=\"small\"/>\r\n                                        </IconButton>\r\n                                       \r\n                                    </Tooltip>\r\n                                     \r\n                                 </TableCell>\r\n                               </TableRow>\r\n                        })}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        </>\r\n\r\n   \r\n)\r\n}\r\n","D:\\web_project\\front_end\\src\\pages\\private\\gr\\view.js",["197","198","199","200","201"],"D:\\web_project\\front_end\\src\\pages\\private\\gr\\list.js",["202","203","204","205","206","207","208","209"],"D:\\web_project\\front_end\\src\\pages\\private\\users\\view.js",["210","211","212","213","214"],"import React, {useState, useEffect} from 'react'\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport UserService from '../../../config/api/users.js';\r\nimport users from '../../../config/api/users.js';\r\nexport default function ViewUser({match}) {\r\n      \r\n    // console.log(match.params.id);\r\n    const [user, setUser] = useState({});\r\n    const ID = match.params.id;\r\n\r\n    useEffect(() => {\r\n        UserService.getId(ID).then(res=>{\r\n            // ambil dari postman\r\n            const {datatabel, message, status} = res.data;\r\n            if (message == 'success') {\r\n                setUser(datatabel.body)\r\n          \r\n            }\r\n        })\r\n        .catch(error => {\r\n            alert(error);\r\n        })\r\n      \r\n    \r\n    }, [1])\r\n\r\n\r\n    function formatDate(date) {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n    \r\n        if (month.length < 2) month = '0' + month;\r\n        if (day.length < 2) day = '0' + day;\r\n    \r\n        return [day, month, year].join('/');\r\n    }\r\n    return (\r\n      \r\n        <div>\r\n       \r\n\r\n        <Grid container alignItems=\"center\" justify=\"center\">\r\n            {/* <Grid item xs={12} sm={6}>\r\n                    \r\n            </Grid> */}\r\n         <TableContainer component={Paper}>\r\n             <Table>\r\n                <TableRow>\r\n                        <TableCell>Nomor</TableCell>\r\n                        <TableCell>:</TableCell>\r\n                        <TableCell>{user.id}</TableCell>              \r\n                </TableRow>\r\n                <TableRow>\r\n                        <TableCell>Nama</TableCell>\r\n                        <TableCell>:</TableCell>\r\n                        <TableCell>{user.nama}</TableCell>              \r\n                </TableRow>\r\n                <TableRow>\r\n                        <TableCell>User Name</TableCell>\r\n                        <TableCell>:</TableCell>\r\n                        <TableCell>{user.userName}</TableCell>              \r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                        <TableCell>Created At</TableCell>\r\n                        <TableCell>:</TableCell>\r\n                        <TableCell>{formatDate(user.createdAt)}</TableCell>              \r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                        <TableCell>Created By</TableCell>\r\n                        <TableCell>:</TableCell>\r\n                        <TableCell>{user.createdBy}</TableCell>              \r\n                </TableRow>\r\n                \r\n                <TableRow>\r\n                        <TableCell>Roles</TableCell>\r\n                        <TableCell>:</TableCell>\r\n                        <TableCell>\r\n                           {user.roles ? user.roles.map(task => { return <Typography>{task.name}</Typography>}) : console.log('Ok')} \r\n                        </TableCell>\r\n                        {/* <TableCell>{user.roles.map((role, index) => {\r\n                                    return <Typography key={role.id} component=\"h6\">{role.name}</Typography>\r\n                                })}</TableCell>   */}\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                        <TableCell>Foto</TableCell>\r\n                        <TableCell>:</TableCell>\r\n                        <TableCell>{user.foto}</TableCell>              \r\n                </TableRow>\r\n                \r\n             </Table>\r\n               \r\n         </TableContainer>\r\n        </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n","D:\\web_project\\front_end\\src\\pages\\private\\users\\list.js",["215","216","217","218","219","220","221"],"import React, {useState, useEffect} from 'react';\r\n//import Axios from 'axios';  diganti jadi function users.js\r\n\r\nimport UserService from '../../../config/api/users.js';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Route, Switch, NavLink, Link } from 'react-router-dom'\r\n\r\n//import material-ui\r\nimport Table from '@material-ui/core/Table';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport {useStyles} from './style.js'\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default function ListUser() {\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const history = useHistory();\r\n    const MySwal = withReactContent(Swal);\r\n\r\n    useEffect(() => {\r\n    ////  Axios.get('http://localhost:8090/api/v1/users') di ganti jadi\r\n    UserService.getAll()\r\n      .then(response => {\r\n          const {datatabel, message, status} = response.data;\r\n          if (message == 'success') {\r\n              setUsers(datatabel.body)\r\n          } else {\r\n              alert(message);\r\n          }\r\n      })\r\n      .catch(error => {\r\n          alert(error)\r\n      })\r\n    }, [])\r\n\r\n   \r\n\r\n    \r\n    \r\n\r\n    function formatDate(date) {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n    \r\n        if (month.length < 2) month = '0' + month;\r\n        if (day.length < 2) day = '0' + day;\r\n    \r\n        return [day, month, year].join('/');\r\n    }\r\n\r\n    const handleDelete = idx => {\r\n \r\n        MySwal.fire({\r\n            title: 'Are you sure remove this data?',\r\n            text: \"You won't be able to repeat this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n            UserService.deleteUser(idx)\r\n                .then(response => {\r\n                        console.log(response)\r\n                        MySwal.fire(\r\n                            {\r\n                                title :  `${response.data.datatabel}`,\r\n                                icon : 'success',\r\n                                showConfirmButton: false,\r\n    \r\n                            }\r\n                            \r\n                          )\r\n                          window.location.reload()\r\n                       \r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n                // location.reload();\r\n                \r\n            }\r\n          })\r\n    \r\n      \r\n        \r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={() => { window.location.href='/users/add' }}>\r\n               Add USER\r\n            </Button>\r\n\r\n            <TableContainer component={Paper}>\r\n                <Table size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>No</TableCell>\r\n                            <TableCell>Nama</TableCell>\r\n                            <TableCell>Foto</TableCell>\r\n                            <TableCell>User Name</TableCell>\r\n                            <TableCell>Created At</TableCell>\r\n                            <TableCell>Role</TableCell>\r\n                            <TableCell>Created By</TableCell>\r\n                            \r\n                            \r\n                            <TableCell>Action</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n\r\n                    <TableBody>\r\n                            {users && users.map((user, index) => {\r\n                            return <TableRow hover key={index}>\r\n                                <TableCell>{index+1}</TableCell>\r\n                                <TableCell>{user.nama}</TableCell>\r\n                                <TableCell>{user.foto}</TableCell>\r\n                                <TableCell>{user.userName}</TableCell>\r\n                                <TableCell>{formatDate(user.createdAt)}</TableCell>\r\n                                <TableCell>{user.roles.map((role, index) => {\r\n                                    return <Typography key={role.id} component=\"h6\">{role.name}</Typography>\r\n                                })}</TableCell>\r\n                                <TableCell>{user.createdBy}</TableCell>\r\n                                \r\n                                \r\n                                <TableCell>\r\n                                    <Tooltip title=\"View\">\r\n                                        <IconButton aria-label=\"View\" size=\"small\"\r\n                                        component = {Link} to={`/users/view/${user.id}`}\r\n                                        >\r\n                                            <VisibilityIcon  fontSize=\"small\"/>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                     \r\n\r\n                                    <Tooltip title=\"Edit\">\r\n                                        <IconButton aria-label=\"Edit\" size=\"small\"\r\n                                            component = {Link} to={`/users/edit/${user.id}`}\r\n                                         >\r\n\r\n                                             <EditIcon fontSize=\"small\"/>\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n\r\n                                    <Tooltip title=\"Delete\">\r\n                                        <IconButton onClick={() => handleDelete(user.id)}size=\"small\">\r\n                                     \r\n                                            <DeleteIcon fontSize=\"small\"/>\r\n                                        </IconButton>\r\n                                       \r\n                                    </Tooltip>\r\n                                 </TableCell>\r\n                                \r\n                            </TableRow>\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n\r\n</>\r\n\r\n             \r\n        \r\n    )\r\n}\r\n","D:\\web_project\\front_end\\src\\pages\\private\\partnumber\\add.js",["222"],"import React, {useState}from 'react';\r\nimport {useStyles} from './style.js'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport PartNumberService from '../../../config/api/partnumber.js'\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\n\r\n\r\n\r\n\r\nexport default function AddPn() {\r\n  const classes = useStyles();\r\n  const MySwal = withReactContent(Swal)\r\nconst [form, setForm] = useState({\r\n    partCode : '',\r\n    partName : '',\r\n    stock : 0\r\n});\r\n\r\nconst [error, setError] = useState({\r\n  partCode : '',\r\n  partName : '',\r\n  stock : ''\r\n});\r\n\r\n\r\nconst [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\nconst validate = () => {\r\n\r\n  const newError= {...error};  // object dari state error -> ada partCode dan partName\r\n\r\n  if (!form.partCode) {\r\n    newError.partCode = \"Part Code harus diisi\";\r\n  }\r\n\r\n  if (!form.partName) {\r\n    newError.partName = \"Part Name harus di isi\";\r\n  }\r\n\r\n  if (!form.stock) {\r\n    newError.stock = \"Stock harus di isi\";\r\n  }\r\n\r\n  return newError\r\n\r\n}\r\n\r\nconst handleChange = e => {\r\n\r\n  setForm({\r\n    ...form,\r\n    [e.target.name] : [e.target.value]\r\n  })\r\n\r\n  setError({\r\n    ...error,\r\n    // titik 3 ini berarti isi field dari object error nya\r\n    [e.target.name] :''\r\n  })\r\n\r\n\r\n}\r\n\r\n  const handleSubmit =  async e => {\r\n    e.preventDefault();  //tetap di halaman ini, spy nga lari ke Halaman lain\r\n\r\n    const findErrors = validate();\r\n  \r\n\r\n    if (Object.values(findErrors).some(err => err != '')) {\r\n      setError(findErrors);\r\n\r\n  } else {\r\n      setIsSubmitting(true)\r\n\r\n     console.log(form.partCode);\r\n      var data = { partCode : form.partCode.toString(), partName : form.partName.toString(), stock : form.stock.toString() }\r\n      console.log(data)\r\n      await PartNumberService.addPartNumber(data)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        MySwal.fire({\r\n          position: 'top-end',\r\n          icon: 'success',\r\n          title: `${response.data.mesage}`,\r\n          showConfirmButton: true,\r\n         // timer: 1500\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            \r\n            setForm({\r\n              partCode : '',\r\n              partName : '',\r\n              stock : '' \r\n            })\r\n            setIsSubmitting(false)\r\n            window.location.href = '/partnumbers'\r\n            \r\n          }\r\n        })\r\n\r\n        \r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        alert(err.message)\r\n        setIsSubmitting(false)\r\n      })\r\n  }\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <form className={classes.form} noValidate autoComplete=\"off\">\r\n       {/* matiin Validasi bawaan/ automatis dari Reactnya , autocomplete= histori ketikan di field dimatikan, jadi nga ada sisa ketikan sebelumnya*/}\r\n      <TextField\r\n      fullWidth\r\n        // textnya memenuhi containernya\r\n        type=\"text\"\r\n        id=\"pncode\"\r\n        name=\"partCode\"\r\n        label=\"PN Code\"\r\n        variant=\"filled\"\r\n        value={form.partCode}\r\n        color=\"secondary\"\r\n        size=\"medium\"\r\n        onChange={handleChange}\r\n        required\r\n        helperText={error.partCode}\r\n        error={error.partCode?true:false}\r\n        disabled={isSubmitting}\r\n      />\r\n     \r\n     <TextField\r\n     fullWidth\r\n        type=\"text\"\r\n        id=\"pnname\"\r\n        name=\"partName\"\r\n        label=\"PN Name\"\r\n        variant=\"filled\"\r\n        value={form.partName}\r\n        color=\"secondary\"\r\n        size=\"medium\"\r\n        onChange={handleChange}\r\n        required\r\n        helperText={error.partName}\r\n        error={error.partName?true:false}\r\n        disabled={isSubmitting}\r\n      />\r\n     \r\n      <TextField\r\n        fullWidth\r\n        type=\"text\"\r\n        id=\"stock\"\r\n        name=\"stock\"\r\n        label=\"stock\"\r\n        variant=\"filled\"\r\n        value={form.stock}\r\n        color=\"secondary\"\r\n        size=\"medium\"\r\n        onChange={handleChange}\r\n        required\r\n        helperText={error.stock}\r\n        error={error.stock?true:false}\r\n        disabled={isSubmitting}\r\n      />\r\n\r\n\r\n\r\n      <br></br>\r\n       <Button variant=\"contained\" color=\"secondary\" onClick={handleSubmit} disabled={isSubmitting}>\r\n          Save\r\n        </Button>\r\n\r\n    \r\n    </form>\r\n  );\r\n}\r\n","D:\\web_project\\front_end\\src\\pages\\private\\partnumber\\edit.js",["223","224","225","226","227","228","229"],"import React, {useState, useEffect}from 'react';\r\nimport {useStyles} from './style.js'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport Swal from 'sweetalert2'\r\nimport PartNumberService from '../../../config/api/partnumber.js';\r\n\r\n\r\nexport default function Edit({match}) {\r\n\r\n\r\n    const classes = useStyles();\r\n    const MySwal = withReactContent(Swal)\r\n    const [form, setForm] = useState({\r\n      id : '',\r\n      partCode : '',\r\n      partName : '',\r\n      stock : 0\r\n  });\r\n  \r\n  const [error, setError] = useState({\r\n    partCode : '',\r\n    partName : '',\r\n    stock : ''\r\n  });\r\n  \r\n\r\n\r\n    const ID = match.params.id;\r\n\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\n    useEffect(() => {\r\n      PartNumberService.getId(ID).then(res=>{\r\n          // ambil dari postman\r\n        \r\n          const {datatabel, message, status} = res.data;\r\n          if (message == 'success') {\r\n            console.log(res.data);\r\n           setForm({\r\n            id : datatabel.body.id,\r\n            partCode : datatabel.body.partCode,\r\n            partName : datatabel.body.partName,\r\n            stock : datatabel.body.stock\r\n           })\r\n          } else {\r\n              alert(message);\r\n          }\r\n      })\r\n      .catch(error => {\r\n          alert(error);\r\n      })\r\n    \r\n  \r\n  }, [])\r\n\r\n\r\n\r\n    const validate = () => {\r\n\r\n        const newError= {...error};  // object dari state error -> ada partCode dan partName\r\n      \r\n        if (!form.partCode || form.partCode == \"\") {\r\n          newError.partCode = \"Part Code harus diisi\";\r\n        }\r\n      \r\n        if (!form.partName || form.partName == \"\") {\r\n          newError.partName = \"Part Name harus di isi\";\r\n        }\r\n      \r\n        if (!form.stock || form.stock == \"\") {\r\n          newError.stock = \"Stock harus di isi\";\r\n        }\r\n      \r\n        return newError\r\n      \r\n      }\r\n\r\n    const handleChange = e => {\r\n\r\n        setForm({\r\n          ...form,\r\n          [e.target.name] : [e.target.value]\r\n        })\r\n      \r\n        setError({\r\n          ...error,\r\n          [e.target.name] :''\r\n        })\r\n      \r\n      \r\n      }\r\n      \r\n\r\n      const handleSubmit =  async e => {\r\n        e.preventDefault();  //tetap di halaman ini, spy nga lari ke Halaman lain\r\n    \r\n        const findErrors = validate();\r\n      \r\n    \r\n        if (Object.values(findErrors).some(err => err != '')) {\r\n          setError(findErrors);\r\n    \r\n      } else {\r\n          setIsSubmitting(true)\r\n    \r\n         console.log(form.partCode);\r\n          var data = { partCode : form.partCode.toString(), partName : form.partName.toString(), stock : form.stock.toString(), id : form.id.toString() }\r\n          console.log(data)\r\n       \r\n          await PartNumberService.updatePartNumber(data,ID)\r\n       \r\n          .then(response => {\r\n            console.log(response.data.message);\r\n            MySwal.fire({\r\n              position: 'top-end',\r\n              icon: 'success',\r\n              title: `${response.data.message}`,\r\n              showConfirmButton: true,\r\n             // timer: 1500\r\n            }).then((result) => {\r\n              if (result.isConfirmed) {\r\n                \r\n                setForm({\r\n                  partCode : '',\r\n                  partName : '',\r\n                  stock : '' \r\n                })\r\n                setIsSubmitting(false)\r\n              window.location.href = '/partnumbers'\r\n                \r\n              }\r\n            })\r\n    \r\n            \r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n            alert(err.message)\r\n            setIsSubmitting(false)\r\n          })\r\n      }\r\n    \r\n    \r\n      }\r\n\r\n      \r\n\r\n\r\n\r\n\r\n  return (\r\n    <form className={classes.form} noValidate autoComplete=\"off\">\r\n      \r\n      <TextField\r\n      fullWidth\r\n        type=\"text\"\r\n        id=\"pncode\"\r\n        name=\"partCode\"\r\n        label=\"PN Code\"\r\n        variant=\"filled\"\r\n        value={form.partCode}\r\n        color=\"secondary\"\r\n        size=\"medium\"\r\n        onChange={handleChange}\r\n        required\r\n        helperText={error.partCode}\r\n        error={error.partCode?true:false}\r\n        disabled={isSubmitting}\r\n      />\r\n     \r\n     <TextField\r\n     fullWidth\r\n        type=\"text\"\r\n        id=\"pnname\"\r\n        name=\"partName\"\r\n        label=\"PN Name\"\r\n        variant=\"filled\"\r\n        value={form.partName}\r\n        color=\"secondary\"\r\n        size=\"medium\"\r\n        onChange={handleChange}\r\n        required\r\n        helperText={error.partName}\r\n        error={error.partName?true:false}\r\n        disabled={isSubmitting}\r\n      />\r\n     \r\n      <TextField\r\n        fullWidth\r\n        type=\"text\"\r\n        id=\"stock\"\r\n        name=\"stock\"\r\n        label=\"stock\"\r\n        variant=\"filled\"\r\n        value={form.stock}\r\n        color=\"secondary\"\r\n        size=\"medium\"\r\n        onChange={handleChange}\r\n        required\r\n        helperText={error.stock}\r\n        error={error.stock?true:false}\r\n        disabled={isSubmitting}\r\n      />\r\n\r\n\r\n\r\n      <br></br>\r\n       <Button variant=\"contained\" color=\"secondary\" onClick={handleSubmit} disabled={isSubmitting}>\r\n          Update\r\n        </Button>\r\n\r\n    \r\n    </form>\r\n  );\r\n\r\n\r\n    \r\n}\r\n","D:\\web_project\\front_end\\src\\pages\\private\\gr\\add.js",["230","231"],"import React, {useState}from 'react';\r\nimport {useStyles} from './style.js';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport GRService from '../../../config/api/gr.js';\r\nimport 'date-fns';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\nexport default function AddPn() {\r\n    const classes = useStyles();\r\n    const MySwal = withReactContent(Swal)\r\n  const [form, setForm] = useState({\r\n    grPeriode : \"\",\r\n    grCode : \"\",\r\n    tanggal : \"\",\r\n    kunci : \"\"\r\n  });\r\n\r\n  \r\nconst [error, setError] = useState({\r\n    grPeriode : \"\",\r\n    grCode : \"\",\r\n    tanggal : \"\",\r\n    kunci : true\r\n  });\r\n\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    setError({\r\n     tanggal:\"\"\r\n      // titik 3 ini berarti isi field dari object error nya\r\n      //[date.target.name] :''\r\n    })\r\n  \r\n  };\r\nconst [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\nconst validate = () => {\r\n\r\n    const newError= {...error};  // object dari state error -> ada partCode dan partName\r\n  \r\n    if (!form.grPeriode) {\r\n      newError.grPeriode = \"GR Periode harus diisi\";\r\n    }\r\n  \r\n    if (!form.grCode) {\r\n      newError.grCode = \"GR Code harus di isi\";\r\n    }\r\n  \r\n    if (!selectedDate) {\r\n      newError.tanggal = \"Tanggal harus di isi\";\r\n    }\r\n  \r\n    // if (!form.kunci) {\r\n    //     newError.kunci = \"Kunci harus di isi\";\r\n    //   }\r\n    \r\n    return newError\r\n  \r\n  }\r\n\r\n\r\n  const handleChange = e => {\r\n\r\n    setForm({\r\n      ...form,\r\n      [e.target.name] : [e.target.value]\r\n    })\r\n  \r\n    setError({\r\n      ...error,\r\n      // titik 3 ini berarti isi field dari object error nya\r\n      [e.target.name] :''\r\n    })\r\n  \r\n  \r\n  }\r\n\r\n  const handleSubmit =  async e => {\r\n    e.preventDefault();  //tetap di halaman ini, spy nga lari ke Halaman lain\r\n\r\n    const findErrors = validate();\r\n  \r\n\r\n    if (Object.values(findErrors).some(err => err != '')) {\r\n      setError(findErrors);\r\n\r\n  } else {\r\n      setIsSubmitting(true)\r\n\r\n     console.log(form.grPeriode);\r\n      var data = { grPeriode : form.grPeriode.toString(), grCode : form.grCode.toString(), tanggal : selectedDate.toString(),kunci : (form.kunci === true) ? '1' : '0'}\r\n      console.log(data)\r\n      await GRService.addGr(data)\r\n      .then(response => {\r\n        console.log(response.data);\r\n\r\n        if (response.data.status === 200) {\r\n          \r\n          MySwal.fire({\r\n         \r\n            icon: 'success',\r\n            title: `${response.data.message}`,\r\n            showConfirmButton: true,\r\n           // timer: 1500\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              \r\n              setForm({\r\n                grPeriode : '',\r\n                grCode : '',\r\n                tanggal : '',\r\n                kunci : false \r\n              })\r\n              setIsSubmitting(false)\r\n              window.location.href = '/grlist'\r\n              \r\n            }\r\n          })\r\n\r\n        } else {\r\n          \r\n          MySwal.fire({\r\n          \r\n            icon: 'error',\r\n            title: `${response.data.message}`,\r\n            showConfirmButton: true,\r\n            width: '80%',\r\n           // timer: 1500\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              setIsSubmitting(false)\r\n              \r\n            }\r\n          })\r\n\r\n        }\r\n       \r\n\r\n        \r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        alert(err.message)\r\n        setIsSubmitting(false)\r\n      })\r\n  }\r\n\r\n\r\n  }\r\n\r\n  const handleChecked = e => {\r\n\r\n    setForm({     \r\n      kunci :  e.target.checked,\r\n      grCode : form.grCode,\r\n      grPeriode : form.grPeriode,\r\n      tanggal : form.tanggal\r\n    })\r\n  \r\n    setError({\r\n      // ...error,\r\n      // titik 3 ini berarti isi field dari object error nya\r\n      kunci :''\r\n    })\r\n  \r\n  \r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n    <form className={classes.form} noValidate autoComplete=\"off\">\r\n       {/* matiin Validasi bawaan/ automatis dari Reactnya , autocomplete= histori ketikan di field dimatikan, jadi nga ada sisa ketikan sebelumnya*/}\r\n      <TextField\r\n      fullWidth\r\n        // textnya memenuhi containernya\r\n        type=\"text\"\r\n        id=\"grPeriode\"\r\n        name=\"grPeriode\"\r\n        label=\"GR Periode\"\r\n        variant=\"filled\"\r\n        value={form.grPeriode}\r\n        color=\"secondary\"\r\n        size=\"medium\"\r\n        onChange={handleChange}\r\n        required\r\n        helperText={error.grPeriode}\r\n        error={error.grPeriode?true:false}\r\n        disabled={isSubmitting}\r\n      />\r\n     \r\n     <TextField\r\n     fullWidth\r\n        type=\"text\"\r\n        id=\"grCode\"\r\n        name=\"grCode\"\r\n        label=\"GR Name\"\r\n        variant=\"filled\"\r\n        value={form.grCode}\r\n        color=\"secondary\"\r\n        size=\"medium\"\r\n        onChange={handleChange}\r\n        required\r\n        helperText={error.grCode}\r\n        error={error.grCode?true:false}\r\n        disabled={isSubmitting}\r\n      />\r\n      <KeyboardDatePicker\r\n          fullWidth\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          name=\"tanggal\"\r\n          label=\"Tanggal\"\r\n          format=\"yyyy-MM-dd\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        //  onChange={handleChange}\r\n          required\r\n          helperText={error.tanggal}\r\n          error={error.tanggal?true:false}\r\n          disabled={isSubmitting}\r\n        />\r\n      {/* <TextField\r\n        fullWidth\r\n        type=\"text\"\r\n        id=\"tanggal\"\r\n        name=\"tanggal\"\r\n        label=\"tanggal\"\r\n        variant=\"filled\"\r\n        value={form.tanggal}\r\n        color=\"secondary\"\r\n        size=\"medium\"\r\n        onChange={handleChange}\r\n        required\r\n        helperText={error.tanggal}\r\n        error={error.tanggal?true:false}\r\n        disabled={isSubmitting}\r\n      /> */}\r\n\r\n   {/* <TextField\r\n        fullWidth\r\n        type=\"text\"\r\n        id=\"kunci\"\r\n        name=\"kunci\"\r\n        label=\"kunci\"\r\n        variant=\"filled\"\r\n        value={form.kunci}\r\n        color=\"secondary\"\r\n        size=\"medium\"\r\n        onChange={handleChange}\r\n        required\r\n        helperText={error.kunci}\r\n        error={error.kunci?true:false}\r\n        disabled={isSubmitting}\r\n      /> */}\r\n\r\n\r\n<Switch\r\n    fullWidth\r\n    label=\"kunci\"\r\n    id=\"kunci\"\r\n    size=\"medium\"\r\n    variant=\"filled\"\r\n    required\r\n    helperText={error.kunci}\r\n    error={error.kunci?true:false}\r\n    disabled={isSubmitting}\r\n        checked={form.kunci}\r\n        onChange={handleChecked}\r\n        name=\"kunci\"\r\n        inputProps={{ 'aria-label': 'Kunci' }}\r\n      />\r\n    \r\n\r\n      <br></br>\r\n       <Button variant=\"contained\" color=\"secondary\" onClick={handleSubmit} disabled={isSubmitting}>\r\n          Save\r\n        </Button>\r\n\r\n    \r\n    </form>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","D:\\web_project\\front_end\\src\\pages\\private\\gr\\edit.js",["232","233","234","235","236","237","238","239"],"import React, {useState, useEffect}from 'react';\r\nimport {useStyles} from './style.js';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport Swal from 'sweetalert2';\r\nimport GRService from '../../../config/api/gr.js';\r\nimport 'date-fns';\r\n\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\n\r\nexport default function Edit({match}) {\r\n    const classes = useStyles();\r\n    const MySwal = withReactContent(Swal)\r\n    const [form, setForm] = useState({\r\n    id  : \"\",\r\n    grPeriode : \"\",\r\n    grCode : \"\",\r\n    tanggal : \"\",\r\n    kunci : \"\"\r\n  });\r\n\r\n   \r\nconst [error, setError] = useState({\r\n    id : \"\",\r\n    grPeriode : \"\",\r\n    grCode : \"\",\r\n    tanggal : \"\",\r\n    kunci : \"\"\r\n  });\r\n   \r\n  \r\n  const ID = match.params.id;\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n\r\n\r\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n    setError({\r\n     tanggal:\"\"\r\n      // titik 3 ini berarti isi field dari object error nya\r\n      //[date.target.name] :''\r\n    })\r\n  \r\n  }; \r\n\r\n\r\n\r\n  useEffect(() => {\r\n    GRService.getId(ID).then(res=>{\r\n        // ambil dari postman\r\n      \r\n        const {datatabel, message, status} = res.data;\r\n        if (message == 'success') {\r\n          console.log(res.data);\r\n         setForm({\r\n          id : datatabel.body.id,\r\n          grPeriode : datatabel.body.grPeriode,\r\n          grCode : datatabel.body.grCode,\r\n          tanggal : datatabel.body.tanggal,\r\n          kunci : (datatabel.body.kunci === 1) ? true : false\r\n         })\r\n        } else {\r\n            alert(message);\r\n        }\r\n    })\r\n    .catch(error => {\r\n        alert(error);\r\n    })\r\n  \r\n\r\n}, [])\r\n\r\n\r\n\r\n  const validate = () => {\r\n  \r\n      const newError= {...error};  // object dari state error -> ada partCode dan partName\r\n    \r\n      if (!form.grPeriode || form.grPeriode == \"\") {\r\n        newError.grPeriode = \"GR Periode harus diisi\";\r\n      }\r\n    \r\n      if (!form.grCode || form.grCode == \"\" ) {\r\n        newError.grCode = \"GR Code harus di isi\";\r\n      }\r\n    \r\n      if (!form.tanggal || form.tanggal == \"\") {\r\n        newError.tanggal = \"Tanggal harus di isi\";\r\n      }\r\n    \r\n      // if (!form.kunci || form.kunci == \"\") {\r\n      //     newError.kunci = \"Kunci harus di isi\";\r\n      //   }\r\n      \r\n      return newError\r\n    \r\n    }\r\n\r\n\r\n    const handleChange = e => {\r\n\r\n        setForm({\r\n          ...form,\r\n         [e.target.name] : [e.target.value],\r\n        // kunci : e.target.value,\r\n          \r\n        })\r\n      \r\n        setError({\r\n          ...error,\r\n          // titik 3 ini berarti isi field dari object error nya\r\n          [e.target.name] :''\r\n        })\r\n      \r\n      \r\n      }\r\n\r\n      const handleChecked = e => {\r\n\r\n        setForm({     \r\n          kunci :  e.target.checked,\r\n          grCode : form.grCode,\r\n          grPeriode : form.grPeriode,\r\n          tanggal : form.tanggal\r\n        })\r\n      \r\n        setError({\r\n          // ...error,\r\n          // titik 3 ini berarti isi field dari object error nya\r\n          kunci :''\r\n        })\r\n      \r\n      \r\n      }\r\n\r\n\r\nconst handleSubmit =  async e => {\r\n    e.preventDefault();  //tetap di halaman ini, spy nga lari ke Halaman lain\r\n\r\n    const findErrors = validate();\r\n  \r\n\r\n    if (Object.values(findErrors).some(err => err != '')) {\r\n      setError(findErrors);\r\n\r\n  } else {\r\n      setIsSubmitting(true)\r\n\r\n     console.log(form.grPeriode);\r\n      var data = { grPeriode : form.grPeriode.toString(), grCode : form.grCode.toString(), tanggal : selectedDate.toString(), kunci : (form.kunci === true) ? '1' : '0'}\r\n      console.log(data)\r\n     \r\n      await GRService.updateGr(data,ID)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        MySwal.fire({\r\n          position: 'top-end',\r\n          icon: 'success',\r\n          title: `${response.data.message}`,\r\n          showConfirmButton: true,\r\n         // timer: 1500\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            \r\n            setForm({\r\n              grPeriode : '',\r\n              grCode : '',\r\n              tanggal : '',\r\n              kunci : '' \r\n            })\r\n            setIsSubmitting(false)\r\n            window.location.href = '/grlist'\r\n            \r\n          }\r\n        })\r\n\r\n        \r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        alert(err.message)\r\n        setIsSubmitting(false)\r\n      })\r\n  }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <form className={classes.form} noValidate autoComplete=\"off\">\r\n           {/* matiin Validasi bawaan/ automatis dari Reactnya , autocomplete= histori ketikan di field dimatikan, jadi nga ada sisa ketikan sebelumnya*/}\r\n          <TextField\r\n          fullWidth\r\n            // textnya memenuhi containernya\r\n            type=\"text\"\r\n            id=\"grPeriode\"\r\n            name=\"grPeriode\"\r\n            label=\"GR Periode\"\r\n            variant=\"filled\"\r\n            value={form.grPeriode}\r\n            color=\"secondary\"\r\n            size=\"medium\"\r\n            onChange={handleChange}\r\n            required\r\n            helperText={error.grPeriode}\r\n            error={error.grPeriode?true:false}\r\n            disabled={isSubmitting}\r\n          />\r\n         \r\n         <TextField\r\n         fullWidth\r\n            type=\"text\"\r\n            id=\"grCode\"\r\n            name=\"grCode\"\r\n            label=\"GR Name\"\r\n            variant=\"filled\"\r\n            value={form.grCode}\r\n            color=\"secondary\"\r\n            size=\"medium\"\r\n            onChange={handleChange}\r\n            required\r\n            helperText={error.grCode}\r\n            error={error.grCode?true:false}\r\n            disabled={isSubmitting}\r\n          />\r\n          <KeyboardDatePicker\r\n              fullWidth\r\n              margin=\"normal\"\r\n              id=\"date-picker-dialog\"\r\n              name=\"tanggal\"\r\n              label=\"Tanggal\"\r\n              format=\"yyyy-MM-dd\"\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n              KeyboardButtonProps={{\r\n                'aria-label': 'change date',\r\n              }}\r\n            //  onChange={handleChange}\r\n              required\r\n              helperText={error.tanggal}\r\n              error={error.tanggal?true:false}\r\n              disabled={isSubmitting}\r\n            />\r\n          \r\n{/*     \r\n       <TextField\r\n            fullWidth\r\n            type=\"text\"\r\n            id=\"kunci\"\r\n            name=\"kunci\"\r\n            label=\"kunci\"\r\n            variant=\"filled\"\r\n            value={form.kunci}\r\n            color=\"secondary\"\r\n            size=\"medium\"\r\n            onChange={handleChange}\r\n            required\r\n            helperText={error.kunci}\r\n            error={error.kunci?true:false}\r\n            disabled={isSubmitting}\r\n          /> */}\r\n    \r\n    <Switch\r\n    fullWidth\r\n    label=\"kunci\"\r\n    id=\"kunci\"\r\n    size=\"medium\"\r\n    variant=\"filled\"\r\n    required\r\n    helperText={error.kunci}\r\n    error={error.kunci?true:false}\r\n    disabled={isSubmitting}\r\n        checked={form.kunci}\r\n        onChange={handleChecked}\r\n        name=\"kunci\"\r\n        inputProps={{ 'aria-label': 'Kunci' }}\r\n      />\r\n    \r\n    \r\n          <br></br>\r\n           <Button variant=\"contained\" color=\"secondary\" onClick={handleSubmit} disabled={isSubmitting}>\r\n              Update\r\n            </Button>\r\n    \r\n        \r\n        </form>\r\n        </MuiPickersUtilsProvider>\r\n    \r\n    )\r\n}\r\n","D:\\web_project\\front_end\\src\\pages\\private\\users\\add.js",["240","241","242","243"],"import React, {useState}from 'react';\r\nimport {useStyles} from './style.js'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport 'date-fns';\r\nimport UserService from '../../../config/api/users.js'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n  } from '@material-ui/pickers';\r\nimport Select from '@material-ui/core/Select';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {  useTheme} from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport AuthService from '../../../config/api/auth.js'\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n\r\nconst names = [\r\n  'admin',\r\n  'user_pn',\r\n  'user_gr',\r\n  'user',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\nexport default function AddUser() {\r\n    const classes = useStyles();\r\n    const MySwal = withReactContent(Swal)\r\n    const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const handleChangeSelect = (event) => {\r\n    setPersonName(event.target.value);\r\n  };\r\n\r\n  const handleChangeMultiple = (event) => {\r\n    const { options } = event.target;\r\n    const value = [];\r\n    for (let i = 0, l = options.length; i < l; i += 1) {\r\n      if (options[i].selected) {\r\n        value.push(options[i].value);\r\n      }\r\n    }\r\n    setPersonName(value);\r\n  };\r\n\r\n    const [form, setForm] = useState({\r\n        nama : \"\",\r\n        username : \"\",\r\n        foto : \"\",\r\n        createdAt : \"\",\r\n        createdBy : \"\",\r\n        password : \"\",\r\n        roles : []\r\n    });\r\n  \r\n    const [error, setError] = useState({\r\n        nama : '',\r\n        username : '',\r\n        foto : '',\r\n        createdAt : \"\",\r\n        createdBy : \"\",\r\n        password : \"\",\r\n        roles : \"\"\r\n      });\r\n\r\n      const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n      const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        setError({\r\n          createdAt:\"\"\r\n          // titik 3 ini berarti isi field dari object error nya\r\n          //[date.target.name] :''\r\n        })\r\n      \r\n      };\r\n      const [isSubmitting, setIsSubmitting] = useState(false)\r\n      const validate = () => {\r\n\r\n        const newError= {...error};  // object dari state error -> ada partCode dan partName\r\n      \r\n        if (!form.nama) {\r\n          newError.nama = \"nama harus diisi\";\r\n        }\r\n        if (!form.username) {\r\n          newError.username = \"Username harus diisi\";\r\n        } else if(form.username.toString().length < 3) {\r\n          console.log(form.username.toString().length );\r\n          newError.username = \"UserName minimal 3 Character\";\r\n        } else if(form.username.toString().length > 20) {\r\n            newError.username = \"UserName maximal 20 Character\";\r\n       }\r\n        \r\n        \r\n\r\n        // if (!form.foto) {\r\n        //   newError.foto = \"foto harus di isi\";\r\n        // }\r\n      \r\n        if (!selectedDate) {\r\n          newError.createdAt = \"Created At di isi\";\r\n        }\r\n        \r\n        // if (!form.createdBy) {\r\n        //     newError.createdBy = \"Created By di isi\";\r\n        // }\r\n      \r\n        \r\n        if (!form.password) {\r\n          newError.password = \"Password di isi\";\r\n      }\r\n\r\n        \r\n        if (!form.roles) {\r\n             newError.roles = \"Roles di isi\";\r\n         }\r\n\r\n\r\n    return newError\r\n        \r\n    \r\n}\r\n\r\nconst handleChange = e => {\r\n\r\n    setForm({\r\n      ...form,\r\n      [e.target.name] : [e.target.value]\r\n    })\r\n  \r\n    setError({\r\n      ...error,\r\n      // titik 3 ini berarti isi field dari object error nya\r\n      [e.target.name] :''\r\n    })\r\n  \r\n  \r\n  }\r\n  \r\n    const handleSubmit =  async e => {\r\n      e.preventDefault();  //tetap di halaman ini, spy nga lari ke Halaman lain\r\n  \r\n      const findErrors = validate();\r\n    \r\n  \r\n      if (Object.values(findErrors).some(err => err != '')) {\r\n        setError(findErrors);\r\n  \r\n    } else {\r\n      // console.log(personName);\r\n     ////  console.log(AuthService.getCurrentUser().nama);\r\n        setIsSubmitting(true)\r\n  \r\n      \r\n        var data = { username : form.username.toString(), nama : form.nama.toString(), createdAt : selectedDate.toString(), password : form.password.toString(), role : personName ,\r\n        createdBy : AuthService.getCurrentUser().nama , foto : form.foto.toString()  }\r\n        console.log(data)\r\n        await UserService.addUser(data)\r\n        .then(response => {\r\n          console.log(response.data);\r\n          MySwal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: `Data Register Successfully !`,\r\n            showConfirmButton: true,\r\n           // timer: 1500\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              \r\n              setForm({\r\n                username : '',\r\n                nama : '',\r\n                createdAt : '',\r\n                password : '',\r\n                roles : '' \r\n              })\r\n              setIsSubmitting(false)\r\n              window.location.href = '/users'\r\n              \r\n            }\r\n          })\r\n  \r\n          \r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          alert(err.message)\r\n          setIsSubmitting(false)\r\n        })\r\n     }\r\n  \r\n  \r\n    }\r\n  \r\n    return (\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <form className={classes.form} noValidate autoComplete=\"off\">\r\n         {/* matiin Validasi bawaan/ automatis dari Reactnya , autocomplete= histori ketikan di field dimatikan, jadi nga ada sisa ketikan sebelumnya*/}\r\n         <FormControl className={classes.formControl}>\r\n         <TextField\r\n        fullWidth\r\n          // textnya memenuhi containernya\r\n          type=\"text\"\r\n          id=\"nama\"\r\n          name=\"nama\"\r\n          label=\"nama\"\r\n          variant=\"filled\"\r\n          value={form.nama}\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          onChange={handleChange}\r\n          required\r\n          helperText={error.nama}\r\n          error={error.nama?true:false}\r\n          disabled={isSubmitting}\r\n        />\r\n         </FormControl>\r\n      \r\n         <FormControl className={classes.formControl}>\r\n         <TextField\r\n        fullWidth\r\n          // textnya memenuhi containernya\r\n          type=\"text\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          label=\"username\"\r\n          variant=\"filled\"\r\n          value={form.username}\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          onChange={handleChange}\r\n          required\r\n          helperText={error.username}\r\n          error={error.username?true:false}\r\n          disabled={isSubmitting}\r\n        />\r\n         </FormControl>\r\n\r\n         <FormControl className={classes.formControl}>\r\n       <TextField\r\n       fullWidth\r\n          type=\"text\"\r\n          id=\"foto\"\r\n          name=\"foto\"\r\n          label=\"foto\"\r\n          variant=\"filled\"\r\n          value={form.foto}\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          onChange={handleChange}\r\n          //required\r\n          helperText={error.foto}\r\n          error={error.foto?true:false}\r\n          disabled={isSubmitting}\r\n        />\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControl}>\r\n       <KeyboardDatePicker\r\n          fullWidth\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          name=\"createdAt\"\r\n          label=\"createdAt\"\r\n          format=\"yyyy-MM-dd\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n        //  onChange={handleChange}\r\n          required\r\n          helperText={error.createdAt}\r\n          error={error.createdAt?true:false}\r\n          disabled={isSubmitting}\r\n        />\r\n </FormControl>\r\n\r\n{/*   \r\n        <TextField\r\n          fullWidth\r\n          type=\"text\"\r\n          id=\"createdBy\"\r\n          name=\"createdBy\"\r\n          label=\"createdBy\"\r\n          variant=\"filled\"\r\n          value={form.createdBy}\r\n          color=\"secondary\"\r\n          size=\"medium\"\r\n          onChange={handleChange}\r\n          required\r\n          helperText={error.createdBy}\r\n          error={error.createdBy?true:false}\r\n          disabled={isSubmitting}\r\n        /> */}\r\n   {/* <FormControl className={classes.formControl}>\r\n  <TextField\r\n          fullWidth\r\n          type=\"text\"\r\n          id=\"roles\"\r\n          name=\"roles\"\r\n          label=\"roles\"\r\n          variant=\"filled\"\r\n          value={form.roles}\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          onChange={handleChange}\r\n          required\r\n          helperText={error.roles}\r\n          error={error.roles?true:false}\r\n          disabled={isSubmitting}\r\n        />\r\n</FormControl> */}\r\n<FormControl className={classes.formControl}>\r\n        <TextField\r\n          fullWidth\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          label=\"password\"\r\n          variant=\"filled\"\r\n          value={form.password}\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          onChange={handleChange}\r\n          //required\r\n          helperText={error.password}\r\n          error={error.password?true:false}\r\n          disabled={isSubmitting}\r\n        />\r\n</FormControl>\r\n\r\n\r\n<FormControl className={classes.formControl}>\r\n<InputLabel id=\"demo-mutiple-chip-label\">Roles</InputLabel>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          id=\"demo-mutiple-chip\"\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChangeSelect}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n  \r\n        </FormControl>\r\n\r\n\r\n        <br></br>\r\n         <Button variant=\"contained\" color=\"secondary\" onClick={handleSubmit} disabled={isSubmitting}>\r\n            Save\r\n          </Button>\r\n  \r\n      </form>\r\n       </MuiPickersUtilsProvider>\r\n    );\r\n  }\r\n  ","D:\\web_project\\front_end\\src\\pages\\private\\users\\edit.js",["244","245","246","247","248","249","250"],"import React, {useState, useEffect}from 'react';\r\nimport {useStyles} from './style.js';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport 'date-fns';\r\nimport UserService from '../../../config/api/users.js'\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n  } from '@material-ui/pickers';\r\n\r\nimport Select from '@material-ui/core/Select';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {  useTheme} from '@material-ui/core/styles';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport AuthService from '../../../config/api/auth.js'\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\n\r\nconst names = [\r\n  'admin',\r\n  'user_pn',\r\n  'user_gr',\r\n  'user',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\nexport default function Edit({match}) {\r\n\r\n\r\n    \r\n    const classes = useStyles();\r\n    const MySwal = withReactContent(Swal)\r\n    const theme = useTheme();\r\n    const [personName, setPersonName] = React.useState([]);\r\n    const ID = match.params.id;\r\n    const handleChangeSelect = (event) => {\r\n        setPersonName(event.target.value);\r\n    };\r\n\r\n    const handleChangeMultiple = (event) => {\r\n        const { options } = event.target;\r\n        const value = [];\r\n        for (let i = 0, l = options.length; i < l; i += 1) {\r\n        if (options[i].selected) {\r\n            value.push(options[i].value);\r\n        }\r\n        }\r\n        setPersonName(value);\r\n    };\r\n\r\n    const [form, setForm] = useState({\r\n        nama : \"\",\r\n        username : \"\",\r\n        foto : \"\",\r\n        createdAt : \"\",\r\n        createdBy : \"\",\r\n        password : \"\",\r\n        roles : []\r\n    });\r\n  \r\n    const [error, setError] = useState({\r\n        nama : '',\r\n        username : '',\r\n        foto : '',\r\n        createdAt : \"\",\r\n        createdBy : \"\",\r\n        password : \"\",\r\n        roles : \"\"\r\n      });\r\n\r\n      const [selectedDate, setSelectedDate] = React.useState(new Date());\r\n\r\n      const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        setError({\r\n          createdAt:\"\"\r\n          \r\n        })\r\n      \r\n      };\r\n      const [isSubmitting, setIsSubmitting] = useState(false)\r\n      const validate = () => {\r\n\r\n        const newError= {...error}; \r\n      \r\n        if (!form.nama) {\r\n          newError.nama = \"nama harus diisi\";\r\n        }\r\n        if (!form.username) {\r\n          newError.username = \"Username harus diisi\";\r\n        } else if(form.username.toString().length < 3) {\r\n          console.log(form.username.toString().length );\r\n          newError.username = \"UserName minimal 3 Character\";\r\n        } else if(form.username.toString().length > 20) {\r\n            newError.username = \"UserName maximal 20 Character\";\r\n       }\r\n     \r\n      \r\n        if (!selectedDate) {\r\n          newError.createdAt = \"Created At di isi\";\r\n        }\r\n        \r\n\r\n        \r\n        if (!form.password) {\r\n          newError.password = \"Password di isi\";\r\n      }\r\n\r\n        \r\n        if (!form.roles) {\r\n             newError.roles = \"Roles di isi\";\r\n         }\r\n\r\n\r\n    return newError\r\n        \r\n    \r\n}\r\n\r\nconst handleChange = e => {\r\n\r\n    setForm({\r\n      ...form,\r\n      [e.target.name] : [e.target.value]\r\n    })\r\n  \r\n    setError({\r\n      ...error,\r\n      \r\n      [e.target.name] :''\r\n    })\r\n  \r\n  \r\n  }\r\n  \r\n    const handleSubmit =  async e => {\r\n      e.preventDefault();  \r\n  \r\n      const findErrors = validate();\r\n    \r\n  \r\n      if (Object.values(findErrors).some(err => err != '')) {\r\n        setError(findErrors);\r\n  \r\n    } else {\r\n     \r\n        setIsSubmitting(true)\r\n  \r\n      \r\n        var data = { username : form.username.toString(), nama : form.nama.toString(), createdAt : selectedDate.toString(), password : form.password.toString(), role : personName ,\r\n        createdBy : AuthService.getCurrentUser().nama , foto : form.foto.toString()  }\r\n        console.log(data)\r\n        await UserService.addUser(data)\r\n        .then(response => {\r\n          console.log(response.data);\r\n          MySwal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: `Data Register Successfully !`,\r\n            showConfirmButton: true,\r\n          \r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n              \r\n              setForm({\r\n                username : '',\r\n                nama : '',\r\n                createdAt : '',\r\n                password : '',\r\n                roles : '' \r\n              })\r\n              setIsSubmitting(false)\r\n              window.location.href = '/users'\r\n              \r\n            }\r\n          })\r\n  \r\n          \r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          alert(err.message)\r\n          setIsSubmitting(false)\r\n        })\r\n     }\r\n  \r\n  \r\n    }\r\n  \r\n\r\n\r\n\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <form className={classes.form} noValidate autoComplete=\"off\">\r\n               <FormControl className={classes.formControl}>\r\n         <TextField\r\n        fullWidth\r\n         \r\n          type=\"text\"\r\n          id=\"nama\"\r\n          name=\"nama\"\r\n          label=\"nama\"\r\n          variant=\"filled\"\r\n          value={form.nama}\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          onChange={handleChange}\r\n          required\r\n          helperText={error.nama}\r\n          error={error.nama?true:false}\r\n          disabled={isSubmitting}\r\n        />\r\n         </FormControl>\r\n      \r\n         <FormControl className={classes.formControl}>\r\n         <TextField\r\n        fullWidth\r\n        \r\n          type=\"text\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          label=\"username\"\r\n          variant=\"filled\"\r\n          value={form.username}\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          onChange={handleChange}\r\n          required\r\n          helperText={error.username}\r\n          error={error.username?true:false}\r\n          disabled={isSubmitting}\r\n        />\r\n         </FormControl>\r\n\r\n         <FormControl className={classes.formControl}>\r\n       <TextField\r\n       fullWidth\r\n          type=\"text\"\r\n          id=\"foto\"\r\n          name=\"foto\"\r\n          label=\"foto\"\r\n          variant=\"filled\"\r\n          value={form.foto}\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          onChange={handleChange}\r\n      \r\n          helperText={error.foto}\r\n          error={error.foto?true:false}\r\n          disabled={isSubmitting}\r\n        />\r\n        </FormControl>\r\n\r\n        <FormControl className={classes.formControl}>\r\n       <KeyboardDatePicker\r\n          fullWidth\r\n          margin=\"normal\"\r\n          id=\"date-picker-dialog\"\r\n          name=\"createdAt\"\r\n          label=\"createdAt\"\r\n          format=\"yyyy-MM-dd\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change date',\r\n          }}\r\n       \r\n          required\r\n          helperText={error.createdAt}\r\n          error={error.createdAt?true:false}\r\n          disabled={isSubmitting}\r\n        />\r\n </FormControl>\r\n\r\n<FormControl className={classes.formControl}>\r\n        <TextField\r\n          fullWidth\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          label=\"password\"\r\n          variant=\"filled\"\r\n          value={form.password}\r\n          color=\"secondary\"\r\n          size=\"large\"\r\n          onChange={handleChange}\r\n          //required\r\n          helperText={error.password}\r\n          error={error.password?true:false}\r\n          disabled={isSubmitting}\r\n        />\r\n</FormControl>\r\n\r\n\r\n<FormControl className={classes.formControl}>\r\n<InputLabel id=\"demo-mutiple-chip-label\">Roles</InputLabel>\r\n        <Select\r\n          labelId=\"demo-mutiple-chip-label\"\r\n          id=\"demo-mutiple-chip\"\r\n          multiple\r\n          value={personName}\r\n          onChange={handleChangeSelect}\r\n          input={<Input id=\"select-multiple-chip\" />}\r\n          renderValue={(selected) => (\r\n            <div className={classes.chips}>\r\n              {selected.map((value) => (\r\n                <Chip key={value} label={value} className={classes.chip} />\r\n              ))}\r\n            </div>\r\n          )}\r\n          MenuProps={MenuProps}\r\n        >\r\n          {names.map((name) => (\r\n            <MenuItem key={name} value={name} style={getStyles(name, personName, theme)}>\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n  \r\n        </FormControl>\r\n\r\n\r\n        <br></br>\r\n         <Button variant=\"contained\" color=\"secondary\" onClick={handleSubmit} disabled={isSubmitting}>\r\n            Save\r\n          </Button>\r\n  \r\n      </form>\r\n       </MuiPickersUtilsProvider>\r\n\r\n    )\r\n}\r\n",{"ruleId":"251","severity":1,"message":"252","line":6,"column":35,"nodeType":"253","messageId":"254","endLine":6,"endColumn":40},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","replacedBy":"258"},{"ruleId":"251","severity":1,"message":"259","line":7,"column":8,"nodeType":"253","messageId":"254","endLine":7,"endColumn":20},{"ruleId":"251","severity":1,"message":"260","line":21,"column":12,"nodeType":"253","messageId":"254","endLine":21,"endColumn":20},{"ruleId":"251","severity":1,"message":"261","line":36,"column":20,"nodeType":"253","messageId":"254","endLine":36,"endColumn":30},{"ruleId":"262","severity":1,"message":"263","line":77,"column":56,"nodeType":"264","messageId":"265","endLine":77,"endColumn":58},{"ruleId":"266","severity":1,"message":"267","line":121,"column":37,"nodeType":"268","messageId":"269","endLine":121,"endColumn":38},{"ruleId":"251","severity":1,"message":"270","line":13,"column":8,"nodeType":"253","messageId":"254","endLine":13,"endColumn":15},{"ruleId":"251","severity":1,"message":"271","line":15,"column":8,"nodeType":"253","messageId":"254","endLine":15,"endColumn":13},{"ruleId":"251","severity":1,"message":"272","line":19,"column":8,"nodeType":"253","messageId":"254","endLine":19,"endColumn":25},{"ruleId":"251","severity":1,"message":"260","line":42,"column":10,"nodeType":"253","messageId":"254","endLine":42,"endColumn":18},{"ruleId":"273","severity":1,"message":"274","line":62,"column":6,"nodeType":"275","endLine":62,"endColumn":8,"suggestions":"276"},{"ruleId":"251","severity":1,"message":"277","line":70,"column":9,"nodeType":"253","messageId":"254","endLine":70,"endColumn":25},{"ruleId":"251","severity":1,"message":"278","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":13},{"ruleId":"251","severity":1,"message":"278","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":13},{"ruleId":"251","severity":1,"message":"279","line":1,"column":23,"nodeType":"253","messageId":"254","endLine":1,"endColumn":31},{"ruleId":"251","severity":1,"message":"278","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":13},{"ruleId":"251","severity":1,"message":"278","line":2,"column":8,"nodeType":"253","messageId":"254","endLine":2,"endColumn":13},{"ruleId":"251","severity":1,"message":"280","line":2,"column":16,"nodeType":"253","messageId":"254","endLine":2,"endColumn":22},{"ruleId":"251","severity":1,"message":"281","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":18},{"ruleId":"251","severity":1,"message":"282","line":20,"column":40,"nodeType":"253","messageId":"254","endLine":20,"endColumn":46},{"ruleId":"262","severity":1,"message":"283","line":21,"column":25,"nodeType":"264","messageId":"265","endLine":21,"endColumn":27},{"ruleId":"273","severity":1,"message":"284","line":32,"column":8,"nodeType":"275","endLine":32,"endColumn":10,"suggestions":"285"},{"ruleId":"251","severity":1,"message":"252","line":4,"column":10,"nodeType":"253","messageId":"254","endLine":4,"endColumn":15},{"ruleId":"251","severity":1,"message":"280","line":4,"column":17,"nodeType":"253","messageId":"254","endLine":4,"endColumn":23},{"ruleId":"251","severity":1,"message":"286","line":4,"column":25,"nodeType":"253","messageId":"254","endLine":4,"endColumn":32},{"ruleId":"251","severity":1,"message":"287","line":23,"column":10,"nodeType":"253","messageId":"254","endLine":23,"endColumn":13},{"ruleId":"251","severity":1,"message":"288","line":31,"column":7,"nodeType":"253","messageId":"254","endLine":31,"endColumn":14},{"ruleId":"251","severity":1,"message":"282","line":41,"column":36,"nodeType":"253","messageId":"254","endLine":41,"endColumn":42},{"ruleId":"262","severity":1,"message":"283","line":42,"column":21,"nodeType":"264","messageId":"265","endLine":42,"endColumn":23},{"ruleId":"251","severity":1,"message":"281","line":3,"column":8,"nodeType":"253","messageId":"254","endLine":3,"endColumn":18},{"ruleId":"251","severity":1,"message":"289","line":22,"column":20,"nodeType":"253","messageId":"254","endLine":22,"endColumn":29},{"ruleId":"251","severity":1,"message":"282","line":27,"column":40,"nodeType":"253","messageId":"254","endLine":27,"endColumn":46},{"ruleId":"262","severity":1,"message":"283","line":28,"column":25,"nodeType":"264","messageId":"265","endLine":28,"endColumn":27},{"ruleId":"273","severity":1,"message":"284","line":41,"column":8,"nodeType":"275","endLine":41,"endColumn":10,"suggestions":"290"},{"ruleId":"251","severity":1,"message":"252","line":7,"column":10,"nodeType":"253","messageId":"254","endLine":7,"endColumn":15},{"ruleId":"251","severity":1,"message":"280","line":7,"column":17,"nodeType":"253","messageId":"254","endLine":7,"endColumn":23},{"ruleId":"251","severity":1,"message":"286","line":7,"column":25,"nodeType":"253","messageId":"254","endLine":7,"endColumn":32},{"ruleId":"251","severity":1,"message":"281","line":16,"column":8,"nodeType":"253","messageId":"254","endLine":16,"endColumn":18},{"ruleId":"251","severity":1,"message":"288","line":35,"column":11,"nodeType":"253","messageId":"254","endLine":35,"endColumn":18},{"ruleId":"251","severity":1,"message":"282","line":43,"column":40,"nodeType":"253","messageId":"254","endLine":43,"endColumn":46},{"ruleId":"262","severity":1,"message":"283","line":44,"column":25,"nodeType":"264","messageId":"265","endLine":44,"endColumn":27},{"ruleId":"262","severity":1,"message":"283","line":146,"column":56,"nodeType":"264","messageId":"265","endLine":146,"endColumn":58},{"ruleId":"251","severity":1,"message":"291","line":11,"column":8,"nodeType":"253","messageId":"254","endLine":11,"endColumn":13},{"ruleId":"251","severity":1,"message":"282","line":21,"column":40,"nodeType":"253","messageId":"254","endLine":21,"endColumn":46},{"ruleId":"262","severity":1,"message":"283","line":22,"column":25,"nodeType":"264","messageId":"265","endLine":22,"endColumn":27},{"ruleId":"273","severity":1,"message":"284","line":32,"column":8,"nodeType":"275","endLine":32,"endColumn":11,"suggestions":"292"},{"ruleId":"273","severity":1,"message":"293","line":32,"column":9,"nodeType":"294","endLine":32,"endColumn":10},{"ruleId":"251","severity":1,"message":"252","line":6,"column":10,"nodeType":"253","messageId":"254","endLine":6,"endColumn":15},{"ruleId":"251","severity":1,"message":"280","line":6,"column":17,"nodeType":"253","messageId":"254","endLine":6,"endColumn":23},{"ruleId":"251","severity":1,"message":"286","line":6,"column":25,"nodeType":"253","messageId":"254","endLine":6,"endColumn":32},{"ruleId":"251","severity":1,"message":"295","line":24,"column":9,"nodeType":"253","messageId":"254","endLine":24,"endColumn":18},{"ruleId":"251","severity":1,"message":"288","line":30,"column":11,"nodeType":"253","messageId":"254","endLine":30,"endColumn":18},{"ruleId":"251","severity":1,"message":"282","line":37,"column":38,"nodeType":"253","messageId":"254","endLine":37,"endColumn":44},{"ruleId":"262","severity":1,"message":"283","line":38,"column":23,"nodeType":"264","messageId":"265","endLine":38,"endColumn":25},{"ruleId":"262","severity":1,"message":"263","line":73,"column":51,"nodeType":"264","messageId":"265","endLine":73,"endColumn":53},{"ruleId":"251","severity":1,"message":"282","line":38,"column":38,"nodeType":"253","messageId":"254","endLine":38,"endColumn":44},{"ruleId":"262","severity":1,"message":"283","line":39,"column":23,"nodeType":"264","messageId":"265","endLine":39,"endColumn":25},{"ruleId":"273","severity":1,"message":"284","line":56,"column":6,"nodeType":"275","endLine":56,"endColumn":8,"suggestions":"296"},{"ruleId":"262","severity":1,"message":"283","line":64,"column":45,"nodeType":"264","messageId":"265","endLine":64,"endColumn":47},{"ruleId":"262","severity":1,"message":"283","line":68,"column":45,"nodeType":"264","messageId":"265","endLine":68,"endColumn":47},{"ruleId":"262","severity":1,"message":"283","line":72,"column":39,"nodeType":"264","messageId":"265","endLine":72,"endColumn":41},{"ruleId":"262","severity":1,"message":"263","line":102,"column":55,"nodeType":"264","messageId":"265","endLine":102,"endColumn":57},{"ruleId":"251","severity":1,"message":"297","line":13,"column":3,"nodeType":"253","messageId":"254","endLine":13,"endColumn":21},{"ruleId":"262","severity":1,"message":"263","line":96,"column":51,"nodeType":"264","messageId":"265","endLine":96,"endColumn":53},{"ruleId":"251","severity":1,"message":"297","line":14,"column":3,"nodeType":"253","messageId":"254","endLine":14,"endColumn":21},{"ruleId":"251","severity":1,"message":"282","line":62,"column":36,"nodeType":"253","messageId":"254","endLine":62,"endColumn":42},{"ruleId":"262","severity":1,"message":"283","line":63,"column":21,"nodeType":"264","messageId":"265","endLine":63,"endColumn":23},{"ruleId":"273","severity":1,"message":"284","line":81,"column":4,"nodeType":"275","endLine":81,"endColumn":6,"suggestions":"298"},{"ruleId":"262","severity":1,"message":"283","line":89,"column":45,"nodeType":"264","messageId":"265","endLine":89,"endColumn":47},{"ruleId":"262","severity":1,"message":"283","line":93,"column":39,"nodeType":"264","messageId":"265","endLine":93,"endColumn":41},{"ruleId":"262","severity":1,"message":"283","line":97,"column":41,"nodeType":"264","messageId":"265","endLine":97,"endColumn":43},{"ruleId":"262","severity":1,"message":"263","line":153,"column":51,"nodeType":"264","messageId":"265","endLine":153,"endColumn":53},{"ruleId":"251","severity":1,"message":"297","line":12,"column":5,"nodeType":"253","messageId":"254","endLine":12,"endColumn":23},{"ruleId":"251","severity":1,"message":"299","line":20,"column":8,"nodeType":"253","messageId":"254","endLine":20,"endColumn":20},{"ruleId":"251","severity":1,"message":"300","line":62,"column":9,"nodeType":"253","messageId":"254","endLine":62,"endColumn":29},{"ruleId":"262","severity":1,"message":"263","line":173,"column":53,"nodeType":"264","messageId":"265","endLine":173,"endColumn":55},{"ruleId":"251","severity":1,"message":"301","line":1,"column":26,"nodeType":"253","messageId":"254","endLine":1,"endColumn":35},{"ruleId":"251","severity":1,"message":"297","line":12,"column":5,"nodeType":"253","messageId":"254","endLine":12,"endColumn":23},{"ruleId":"251","severity":1,"message":"299","line":21,"column":8,"nodeType":"253","messageId":"254","endLine":21,"endColumn":20},{"ruleId":"251","severity":1,"message":"280","line":25,"column":8,"nodeType":"253","messageId":"254","endLine":25,"endColumn":14},{"ruleId":"251","severity":1,"message":"302","line":67,"column":11,"nodeType":"253","messageId":"254","endLine":67,"endColumn":13},{"ruleId":"251","severity":1,"message":"300","line":72,"column":11,"nodeType":"253","messageId":"254","endLine":72,"endColumn":31},{"ruleId":"262","severity":1,"message":"263","line":174,"column":53,"nodeType":"264","messageId":"265","endLine":174,"endColumn":55},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-native-reassign",["303"],"no-negated-in-lhs",["304"],"'LupaPassword' is defined but never used.","'location' is assigned a value but never used.","'setMessage' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Divider' is defined but never used.","'Badge' is defined but never used.","'NotificationsIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["305"],"'fixedHeightPaper' is assigned a value but never used.","'theme' is defined but never used.","'useTheme' is defined but never used.","'Switch' is defined but never used.","'Typography' is defined but never used.","'status' is assigned a value but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'ID'. Either include it or remove the dependency array.",["306"],"'NavLink' is defined but never used.","'Tab' is defined but never used.","'history' is assigned a value but never used.","'setAmount' is assigned a value but never used.",["307"],"'users' is defined but never used.",["308"],"The 1 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","'useStyles' is defined but never used.",["309"],"'KeyboardTimePicker' is defined but never used.",["310"],"'ListItemText' is defined but never used.","'handleChangeMultiple' is assigned a value but never used.","'useEffect' is defined but never used.","'ID' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"311","fix":"312"},{"desc":"313","fix":"314"},{"desc":"313","fix":"315"},{"desc":"313","fix":"316"},{"desc":"313","fix":"317"},{"desc":"313","fix":"318"},"Update the dependencies array to be: [user]",{"range":"319","text":"320"},"Update the dependencies array to be: [ID]",{"range":"321","text":"322"},{"range":"323","text":"322"},{"range":"324","text":"322"},{"range":"325","text":"322"},{"range":"326","text":"322"},[2365,2367],"[user]",[1083,1085],"[ID]",[1389,1391],[1060,1063],[1420,1422],[1983,1985]]